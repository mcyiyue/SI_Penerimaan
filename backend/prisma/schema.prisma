generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bank {
  id         Int         @id @default(autoincrement())
  noRek      String      @db.VarChar(36)
  nama       String      @db.VarChar(128)
  alias      String      @unique(map: "UNIQUE_ALIAS") @db.VarChar(10)
  perusahaan String      @db.VarChar(64)
  noKPPN     String?     @db.VarChar(64)
  tglBuka    DateTime?   @db.Date
  tglTutup   DateTime?   @db.Date
  transaksi  transaksi[]
}

model bas {
  id         Int         @id @default(autoincrement())
  akun       String      @unique(map: "AKUN_UNIQUE") @db.VarChar(10)
  keterangan String      @db.Text
  transaksi  transaksi[]
}

model groups {
  id           Int            @id @default(autoincrement())
  nama         String         @db.VarChar(120)
  group_access group_access[]
  users        users[]
}

model modules {
  id          Int           @id @db.UnsignedInt
  nama        String        @db.VarChar(64)
  sub_modules sub_modules[]
}

model sub_modules {
  id           Int            @id @db.UnsignedInt
  nama         String         @db.VarChar(64)
  modules_id   Int            @db.UnsignedInt
  route        String?        @db.VarChar(64)
  group_access group_access[]
  modules      modules        @relation(fields: [modules_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sub_modules_ibfk_1")

  @@index([modules_id], map: "modules_id")
}

model transaksi {
  id            Int              @id @default(autoincrement())
  kode          String           @unique(map: "kode") @db.VarChar(25)
  tgl           DateTime         @db.Date
  nim           String?          @db.VarChar(24)
  nama          String?          @db.VarChar(64)
  jenjang       String?          @db.VarChar(24)
  unit_nama     String?          @db.VarChar(400)
  angkatan      String?          @db.VarChar(4)
  fakultas      String?          @db.VarChar(48)
  prodi         String?          @db.VarChar(64)
  jenis         String           @db.VarChar(400)
  kredit        Decimal          @default(0.00) @db.Decimal(16, 2)
  debet         Decimal          @default(0.00) @db.Decimal(16, 2)
  status        transaksi_status
  bas_akun      String           @db.VarChar(10)
  bank_alias    String           @db.VarChar(10)
  date_modified DateTime         @default(now()) @db.Timestamp(0)
  bank          bank             @relation(fields: [bank_alias], references: [alias], onDelete: NoAction, onUpdate: NoAction, map: "transaksi_ibfk_1")
  bas           bas              @relation(fields: [bas_akun], references: [akun], onDelete: NoAction, onUpdate: NoAction, map: "transaksi_ibfk_2")

  @@index([tgl], map: "tgl")
  @@index([bank_alias], map: "bank_alias")
  @@index([bas_akun], map: "bas_akun")
}

model transaksi_temp {
  id            Int                   @id @default(autoincrement())
  kode          String                @unique(map: "kode") @db.VarChar(25)
  tgl           DateTime              @db.Date
  nim           String?               @db.VarChar(24)
  nama          String?               @db.VarChar(64)
  jenjang       String?               @db.VarChar(24)
  unit          String?               @db.VarChar(400)
  angkatan      String?               @db.VarChar(4)
  fakultas      String?               @db.VarChar(48)
  prodi         String?               @db.VarChar(64)
  jenis         String                @db.VarChar(400)
  debet         Decimal               @default(0.00) @db.Decimal(16, 2)
  credit        Decimal               @default(0.00) @db.Decimal(16, 2)
  status        transaksi_temp_status
  bas_akun      String                @db.VarChar(10)
  bank_alias    String                @db.VarChar(10)
  date_modified DateTime              @default(now()) @db.Timestamp(0)

  @@index([tgl], map: "tgl")
}

model units {
  parentId   String  @db.VarChar(5)
  id         String  @id @db.VarChar(5)
  nama       String  @db.VarChar(40)
  jenis      String  @db.VarChar(64)
  keterangan String? @db.VarChar(128)
  users      users?
}

model users {
  kode      Int     @id @default(autoincrement())
  username  String  @db.VarChar(120)
  password  String  @db.VarChar(120)
  active    Boolean
  groups_id Int
  units_id  String  @unique(map: "UNIT_ID_UNIQUE") @db.VarChar(5)
  units     units   @relation(fields: [units_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_1")
  groups    groups  @relation(fields: [groups_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_ibfk_2")

  @@index([groups_id], map: "groups_id")
}

model group_access {
  id             Int         @id @default(autoincrement())
  sub_modules_id Int         @db.UnsignedInt
  groups_id      Int
  sub_modules    sub_modules @relation(fields: [sub_modules_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "group_access_ibfk_1")
  groups         groups      @relation(fields: [groups_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "group_access_ibfk_2")

  @@index([groups_id], map: "groups_id")
  @@index([sub_modules_id], map: "sub_modules_id")
}

enum transaksi_temp_status {
  C
  D
}

enum transaksi_status {
  C
  D
}
